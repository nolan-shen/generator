package ${javaRootPackage}.pojo.dto.param;

import com.fasterxml.jackson.annotation.JsonInclude;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.Range;
import org.hibernate.validator.constraints.SafeHtml;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import java.io.Serializable;

/**
 * @author $author
 * @date $date
 */
@ApiModel(value = "${ClassName}CreateRequestParam")
@Setter
@Getter
@ToString(callSuper = true)
@JsonInclude(JsonInclude.Include.NON_NULL)
public class ${ClassName}CreateRequestParam implements Serializable {

	private static final long serialVersionUID = -1L;

#foreach ($column in $createRequestParamColumns)
	@ApiModelProperty(value="$column.shortComment"#if($column.hidden),hidden=$column.hidden#end)
#if($column.boolIsNullable == false)
#if($column.attrType == "String")
	@NotBlank(message = "$column.shortComment不能为空")
#else
	@NotNull(message = "$column.shortComment不能为空")
#end
#end
#if($column.attrType == "String")
	@Length(max = $column.characterMaximumLength, message = "$column.shortComment长度不正确")
	@SafeHtml(whitelistType = SafeHtml.WhiteListType.NONE)
#end
#if($column.maxValue)
	@Range(min = 1, max = $column.maxValue, message = "$column.shortComment数值不正确")
#end
	private $column.attrType $column.lowerAttrName;

#end

}
